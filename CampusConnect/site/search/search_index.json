{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home: index.md About: about.md Development: index.md theme: readthedocs","title":"Home"},{"location":"api/","text":"Flask","title":"API"},{"location":"api/#flask","text":"","title":"Flask"},{"location":"assets/","text":"Flask","title":"Assets"},{"location":"assets/#flask","text":"","title":"Flask"},{"location":"author/","text":"Flask","title":"Author"},{"location":"author/#flask","text":"","title":"Flask"},{"location":"contributing/","text":"Flask","title":"Flask"},{"location":"contributing/#flask","text":"","title":"Flask"},{"location":"development/","text":"Flask","title":"Development"},{"location":"development/#flask","text":"","title":"Flask"},{"location":"faq/","text":"Campus Social & Community Engagement \u2014 Website FAQ Last updated: 2025-08-15 \u00b7 Support: lusansapkota@gmail.com Using the site Q: What can I do on the site? : Browse events, view impact reports, read partner spotlights, and access resources. Q: Do I need to log in? : Only for admin/editors. Regular visitors can view everything without an account. Q: How do I search? : Use the top search bar or filter chips on Events/Resources pages. Content & updates Q: How often is content updated? : Events: weekly. Reports: each term. News/spotlights: monthly. Q: Where\u2019s the archive? : See Resources \u2192 Archive for past events, reports, and media. Accessibility Q: Is the site accessible? : We aim for WCAG 2.1 AA \u2014 keyboard-friendly navigation, alt text, captions, and high contrast. Report issues via Accessibility Feedback in the footer. Tech & compatibility Q: Which browsers are supported? : Latest Chrome, Edge, Firefox, and Safari; mobile-friendly on iOS/Android. Q: Why is something not loading? : Try hard refresh (Ctrl/Cmd+Shift+R). If it persists, check the status page and send the page URL + screenshot to support. Data & privacy Q: What data do you collect? : Anonymous analytics (page views, device type) and error logs. See Privacy Notice in the footer. Reporting issues Q: How do I report a bug or typo? : Click Report an issue in the footer; include URL, steps, and screenshot. Q: Security or privacy concern? : Email lusansapkota@gmail.com (do not post publicly). Roadmap & feedback Q: What\u2019s coming next? : See Roadmap page (dark mode, improved calendar, downloadable impact data). Q: Can I request a feature? : Yes \u2014 use Feature Request in the footer.","title":"FAQ"},{"location":"faq/#campus-social-community-engagement-website-faq","text":"Last updated: 2025-08-15 \u00b7 Support: lusansapkota@gmail.com","title":"Campus Social &amp; Community Engagement \u2014 Website FAQ"},{"location":"faq/#using-the-site","text":"Q: What can I do on the site? : Browse events, view impact reports, read partner spotlights, and access resources. Q: Do I need to log in? : Only for admin/editors. Regular visitors can view everything without an account. Q: How do I search? : Use the top search bar or filter chips on Events/Resources pages.","title":"Using the site"},{"location":"faq/#content-updates","text":"Q: How often is content updated? : Events: weekly. Reports: each term. News/spotlights: monthly. Q: Where\u2019s the archive? : See Resources \u2192 Archive for past events, reports, and media.","title":"Content &amp; updates"},{"location":"faq/#accessibility","text":"Q: Is the site accessible? : We aim for WCAG 2.1 AA \u2014 keyboard-friendly navigation, alt text, captions, and high contrast. Report issues via Accessibility Feedback in the footer.","title":"Accessibility"},{"location":"faq/#tech-compatibility","text":"Q: Which browsers are supported? : Latest Chrome, Edge, Firefox, and Safari; mobile-friendly on iOS/Android. Q: Why is something not loading? : Try hard refresh (Ctrl/Cmd+Shift+R). If it persists, check the status page and send the page URL + screenshot to support.","title":"Tech &amp; compatibility"},{"location":"faq/#data-privacy","text":"Q: What data do you collect? : Anonymous analytics (page views, device type) and error logs. See Privacy Notice in the footer.","title":"Data &amp; privacy"},{"location":"faq/#reporting-issues","text":"Q: How do I report a bug or typo? : Click Report an issue in the footer; include URL, steps, and screenshot. Q: Security or privacy concern? : Email lusansapkota@gmail.com (do not post publicly).","title":"Reporting issues"},{"location":"faq/#roadmap-feedback","text":"Q: What\u2019s coming next? : See Roadmap page (dark mode, improved calendar, downloadable impact data). Q: Can I request a feature? : Yes \u2014 use Feature Request in the footer.","title":"Roadmap &amp; feedback"},{"location":"features/","text":"CampusConnect Authentication System This document describes the comprehensive authentication system implemented for CampusConnect, including OTP-based login, password reset, and session management. \ud83d\ude80 Features OTP-based Authentication : Secure email-based login without passwords Password Reset : Complete forgot password flow with OTP verification Session Management : JWT-like session tokens with automatic expiration React Context : Centralized authentication state management Custom Hooks : Reusable hooks for OTP and password reset flows TypeScript Support : Full type safety throughout the system Responsive UI : Mobile-friendly authentication components Error Handling : Comprehensive error handling and user feedback \ud83d\udcc1 File Structure frontend/src/ \u251c\u2500\u2500 api/ \u2502 \u251c\u2500\u2500 api.ts # Main API client with auth endpoints \u2502 \u251c\u2500\u2500 types.ts # TypeScript type definitions \u2502 \u2514\u2500\u2500 index.ts # API exports \u251c\u2500\u2500 contexts/ \u2502 \u2514\u2500\u2500 AuthContext.tsx # Authentication context provider \u251c\u2500\u2500 hooks/ \u2502 \u251c\u2500\u2500 useOTP.ts # OTP management hook \u2502 \u251c\u2500\u2500 usePasswordReset.ts # Password reset flow hook \u2502 \u2514\u2500\u2500 index.ts # Hook exports \u251c\u2500\u2500 components/auth/ \u2502 \u251c\u2500\u2500 LoginForm.tsx # Login form with OTP \u2502 \u251c\u2500\u2500 ForgotPasswordForm.tsx # Password reset form \u2502 \u251c\u2500\u2500 OTPInput.tsx # Reusable OTP input component \u2502 \u251c\u2500\u2500 ProtectedRoute.tsx # Route protection component \u2502 \u251c\u2500\u2500 UserProfile.tsx # User profile management \u2502 \u2514\u2500\u2500 index.ts # Component exports \u251c\u2500\u2500 pages/ \u2502 \u251c\u2500\u2500 AuthPage.tsx # Main authentication page \u2502 \u2514\u2500\u2500 AuthDemoPage.tsx # Demo/testing page \u2514\u2500\u2500 auth-system-README.md # This documentation \ud83d\udd27 Backend Endpoints The system connects to the following Flask backend endpoints: POST /api/auth/send-otp - Send OTP to email POST /api/auth/verify-otp - Verify OTP code POST /api/auth/login - Login with email and OTP POST /api/auth/logout - Logout and invalidate session POST /api/auth/reset-password - Reset password with OTP GET /api/auth/profile - Get current user profile \ud83c\udfaf Usage Examples Basic Authentication Flow import { useAuth } from '../contexts/AuthContext'; function MyComponent() { const { state, login, logout } = useAuth(); if (state.isLoading) { return <div>Loading...</div>; } if (!state.isAuthenticated) { return <AuthPage />; } return ( <div> <p>Welcome, {state.user?.email}!</p> <button onClick={logout}>Sign Out</button> </div> ); } Using OTP Hook import { useOTP } from '../hooks/useOTP'; function OTPExample() { const { state, sendOTP, verifyOTP } = useOTP(); const handleSendOTP = async () => { const success = await sendOTP({ email: 'user@example.com', purpose: 'authentication' }); if (success) { console.log('OTP sent successfully'); } }; return ( <div> <button onClick={handleSendOTP} disabled={state.isLoading}> {state.isLoading ? 'Sending...' : 'Send OTP'} </button> {state.error && <p className=\"error\">{state.error}</p>} </div> ); } Protected Routes import { ProtectedRoute } from '../components/auth/ProtectedRoute'; function App() { return ( <Routes> <Route path=\"/public\" element={<PublicPage />} /> <Route path=\"/private\" element={ <ProtectedRoute> <PrivatePage /> </ProtectedRoute> } /> </Routes> ); } \ud83d\udd10 Security Features Session Management Session tokens are stored in localStorage Automatic token validation on app startup Token expiration handling Secure logout with server-side session invalidation OTP Security Time-limited OTP codes (configurable expiration) Rate limiting for OTP requests Secure OTP generation and validation Purpose-specific OTP verification (auth vs password reset) Error Handling Custom ApiError class for detailed error information User-friendly error messages Network error handling Validation error display \ud83c\udfa8 UI Components LoginForm Email input with validation OTP input with auto-focus and paste support Loading states and error handling Responsive design ForgotPasswordForm Multi-step password reset flow Email \u2192 OTP \u2192 New Password \u2192 Success Form validation and error handling Step navigation controls OTPInput Configurable length (default 6 digits) Auto-focus and navigation between inputs Paste support for OTP codes Keyboard navigation (arrow keys, backspace) Disabled state support UserProfile Display user information Password change functionality Session management Logout functionality \ud83d\udd04 State Management The authentication system uses React Context for state management: interface AuthState { user: AuthUser | null; isAuthenticated: boolean; isLoading: boolean; error: string | null; } Actions AUTH_START - Begin authentication process AUTH_SUCCESS - Authentication successful AUTH_ERROR - Authentication failed AUTH_LOGOUT - User logged out CLEAR_ERROR - Clear error state \ud83e\uddea Testing Visit /auth-demo when authenticated to test: - API endpoint connectivity - Authentication state debugging - User profile management - Error handling scenarios \ud83d\ude80 Getting Started Wrap your app with AuthProvider : import { AuthProvider } from './contexts/AuthContext'; function App() { return ( <AuthProvider> <YourApp /> </AuthProvider> ); } Use authentication in components : import { useAuth } from './contexts/AuthContext'; function MyComponent() { const { state, login, logout } = useAuth(); // Use authentication state and methods } Protect routes : import { ProtectedRoute } from './components/auth/ProtectedRoute'; <ProtectedRoute> <YourProtectedComponent /> </ProtectedRoute> \ud83d\udd27 Configuration API Base URL Update the API base URL in frontend/src/api/api.ts : const API_BASE = 'http://localhost:5000/api'; OTP Length Configure OTP input length in components: <OTPInput length={6} value={otp} onChange={setOtp} /> \ud83d\udc1b Troubleshooting Common Issues CORS Errors : Ensure backend CORS is configured for your frontend URL Token Expiration : Check if session tokens are being properly stored and sent OTP Not Received : Verify email service configuration in backend Network Errors : Check if backend server is running and accessible Debug Information Use the AuthDemoPage ( /auth-demo ) to: - View current authentication state - Test API endpoints - Debug session management - Check error handling \ud83d\udcdd API Types ```tsx interface AuthUser { user_id: string; email: string; session_token: string; } interface SendOTPRequest { email: string; user_name?: string; purpose","title":"Features"},{"location":"features/#campusconnect-authentication-system","text":"This document describes the comprehensive authentication system implemented for CampusConnect, including OTP-based login, password reset, and session management.","title":"CampusConnect Authentication System"},{"location":"features/#features","text":"OTP-based Authentication : Secure email-based login without passwords Password Reset : Complete forgot password flow with OTP verification Session Management : JWT-like session tokens with automatic expiration React Context : Centralized authentication state management Custom Hooks : Reusable hooks for OTP and password reset flows TypeScript Support : Full type safety throughout the system Responsive UI : Mobile-friendly authentication components Error Handling : Comprehensive error handling and user feedback","title":"\ud83d\ude80 Features"},{"location":"features/#file-structure","text":"frontend/src/ \u251c\u2500\u2500 api/ \u2502 \u251c\u2500\u2500 api.ts # Main API client with auth endpoints \u2502 \u251c\u2500\u2500 types.ts # TypeScript type definitions \u2502 \u2514\u2500\u2500 index.ts # API exports \u251c\u2500\u2500 contexts/ \u2502 \u2514\u2500\u2500 AuthContext.tsx # Authentication context provider \u251c\u2500\u2500 hooks/ \u2502 \u251c\u2500\u2500 useOTP.ts # OTP management hook \u2502 \u251c\u2500\u2500 usePasswordReset.ts # Password reset flow hook \u2502 \u2514\u2500\u2500 index.ts # Hook exports \u251c\u2500\u2500 components/auth/ \u2502 \u251c\u2500\u2500 LoginForm.tsx # Login form with OTP \u2502 \u251c\u2500\u2500 ForgotPasswordForm.tsx # Password reset form \u2502 \u251c\u2500\u2500 OTPInput.tsx # Reusable OTP input component \u2502 \u251c\u2500\u2500 ProtectedRoute.tsx # Route protection component \u2502 \u251c\u2500\u2500 UserProfile.tsx # User profile management \u2502 \u2514\u2500\u2500 index.ts # Component exports \u251c\u2500\u2500 pages/ \u2502 \u251c\u2500\u2500 AuthPage.tsx # Main authentication page \u2502 \u2514\u2500\u2500 AuthDemoPage.tsx # Demo/testing page \u2514\u2500\u2500 auth-system-README.md # This documentation","title":"\ud83d\udcc1 File Structure"},{"location":"features/#backend-endpoints","text":"The system connects to the following Flask backend endpoints: POST /api/auth/send-otp - Send OTP to email POST /api/auth/verify-otp - Verify OTP code POST /api/auth/login - Login with email and OTP POST /api/auth/logout - Logout and invalidate session POST /api/auth/reset-password - Reset password with OTP GET /api/auth/profile - Get current user profile","title":"\ud83d\udd27 Backend Endpoints"},{"location":"features/#usage-examples","text":"","title":"\ud83c\udfaf Usage Examples"},{"location":"features/#basic-authentication-flow","text":"import { useAuth } from '../contexts/AuthContext'; function MyComponent() { const { state, login, logout } = useAuth(); if (state.isLoading) { return <div>Loading...</div>; } if (!state.isAuthenticated) { return <AuthPage />; } return ( <div> <p>Welcome, {state.user?.email}!</p> <button onClick={logout}>Sign Out</button> </div> ); }","title":"Basic Authentication Flow"},{"location":"features/#using-otp-hook","text":"import { useOTP } from '../hooks/useOTP'; function OTPExample() { const { state, sendOTP, verifyOTP } = useOTP(); const handleSendOTP = async () => { const success = await sendOTP({ email: 'user@example.com', purpose: 'authentication' }); if (success) { console.log('OTP sent successfully'); } }; return ( <div> <button onClick={handleSendOTP} disabled={state.isLoading}> {state.isLoading ? 'Sending...' : 'Send OTP'} </button> {state.error && <p className=\"error\">{state.error}</p>} </div> ); }","title":"Using OTP Hook"},{"location":"features/#protected-routes","text":"import { ProtectedRoute } from '../components/auth/ProtectedRoute'; function App() { return ( <Routes> <Route path=\"/public\" element={<PublicPage />} /> <Route path=\"/private\" element={ <ProtectedRoute> <PrivatePage /> </ProtectedRoute> } /> </Routes> ); }","title":"Protected Routes"},{"location":"features/#security-features","text":"","title":"\ud83d\udd10 Security Features"},{"location":"features/#session-management","text":"Session tokens are stored in localStorage Automatic token validation on app startup Token expiration handling Secure logout with server-side session invalidation","title":"Session Management"},{"location":"features/#otp-security","text":"Time-limited OTP codes (configurable expiration) Rate limiting for OTP requests Secure OTP generation and validation Purpose-specific OTP verification (auth vs password reset)","title":"OTP Security"},{"location":"features/#error-handling","text":"Custom ApiError class for detailed error information User-friendly error messages Network error handling Validation error display","title":"Error Handling"},{"location":"features/#ui-components","text":"","title":"\ud83c\udfa8 UI Components"},{"location":"features/#loginform","text":"Email input with validation OTP input with auto-focus and paste support Loading states and error handling Responsive design","title":"LoginForm"},{"location":"features/#forgotpasswordform","text":"Multi-step password reset flow Email \u2192 OTP \u2192 New Password \u2192 Success Form validation and error handling Step navigation controls","title":"ForgotPasswordForm"},{"location":"features/#otpinput","text":"Configurable length (default 6 digits) Auto-focus and navigation between inputs Paste support for OTP codes Keyboard navigation (arrow keys, backspace) Disabled state support","title":"OTPInput"},{"location":"features/#userprofile","text":"Display user information Password change functionality Session management Logout functionality","title":"UserProfile"},{"location":"features/#state-management","text":"The authentication system uses React Context for state management: interface AuthState { user: AuthUser | null; isAuthenticated: boolean; isLoading: boolean; error: string | null; }","title":"\ud83d\udd04 State Management"},{"location":"features/#actions","text":"AUTH_START - Begin authentication process AUTH_SUCCESS - Authentication successful AUTH_ERROR - Authentication failed AUTH_LOGOUT - User logged out CLEAR_ERROR - Clear error state","title":"Actions"},{"location":"features/#testing","text":"Visit /auth-demo when authenticated to test: - API endpoint connectivity - Authentication state debugging - User profile management - Error handling scenarios","title":"\ud83e\uddea Testing"},{"location":"features/#getting-started","text":"Wrap your app with AuthProvider : import { AuthProvider } from './contexts/AuthContext'; function App() { return ( <AuthProvider> <YourApp /> </AuthProvider> ); } Use authentication in components : import { useAuth } from './contexts/AuthContext'; function MyComponent() { const { state, login, logout } = useAuth(); // Use authentication state and methods } Protect routes : import { ProtectedRoute } from './components/auth/ProtectedRoute'; <ProtectedRoute> <YourProtectedComponent /> </ProtectedRoute>","title":"\ud83d\ude80 Getting Started"},{"location":"features/#configuration","text":"","title":"\ud83d\udd27 Configuration"},{"location":"features/#api-base-url","text":"Update the API base URL in frontend/src/api/api.ts : const API_BASE = 'http://localhost:5000/api';","title":"API Base URL"},{"location":"features/#otp-length","text":"Configure OTP input length in components: <OTPInput length={6} value={otp} onChange={setOtp} />","title":"OTP Length"},{"location":"features/#troubleshooting","text":"","title":"\ud83d\udc1b Troubleshooting"},{"location":"features/#common-issues","text":"CORS Errors : Ensure backend CORS is configured for your frontend URL Token Expiration : Check if session tokens are being properly stored and sent OTP Not Received : Verify email service configuration in backend Network Errors : Check if backend server is running and accessible","title":"Common Issues"},{"location":"features/#debug-information","text":"Use the AuthDemoPage ( /auth-demo ) to: - View current authentication state - Test API endpoints - Debug session management - Check error handling","title":"Debug Information"},{"location":"features/#api-types","text":"```tsx interface AuthUser { user_id: string; email: string; session_token: string; } interface SendOTPRequest { email: string; user_name?: string; purpose","title":"\ud83d\udcdd API Types"},{"location":"futurechanges/","text":"Flask","title":"Future Changes"},{"location":"futurechanges/#flask","text":"","title":"Flask"},{"location":"images/","text":"Flask","title":"Images"},{"location":"images/#flask","text":"","title":"Flask"},{"location":"installiation/","text":"MIT License Copyright (c) 2025 Lusan Sapkota Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Footer","title":"Index"},{"location":"license/","text":"MIT License Copyright (c) 2025 Lusan Sapkota Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Footer","title":"License"},{"location":"safety/","text":"","title":"Safety"},{"location":"safety/#_1","text":"","title":""},{"location":"search/","text":"Flask","title":"Search"},{"location":"search/#flask","text":"","title":"Flask"},{"location":"uninstall/","text":"Flask","title":"Uninstall"},{"location":"uninstall/#flask","text":"","title":"Flask"},{"location":"usage/","text":"Usage","title":"Usage"},{"location":"usage/#usage","text":"","title":"Usage"}]}